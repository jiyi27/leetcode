def numTrees(n: int) -> int:
    # dp[i]表示i个节点能构成的不同BST的数量
    dp = [0] * (n + 1)
    dp[0] = 1  # 空树也是一种情况
    dp[1] = 1  # 只有一个节点的情况

    # 计算从2到n的每种情况
    for i in range(2, n + 1):
        # 选择不同的数字作为根节点
        for j in range(1, i + 1):
            # 左子树节点个数为j-1,右子树节点个数为i-j
            # 我们要的是多少个组合, 所以要左右想乘
            # 形成不同BST的数量只与节点个数有关,与具体的数字大小无关
            # 比如我们选择3作为根节点, 那左子树一定是用1和2这两个数,
            # 这两个数能形成的BST数量,和用4,5这两个数能形成的BST数量是完全一样的
            # 因为它们都是2个连续的数,只是大小不同而已
            dp[i] += dp[j - 1] * dp[i - j]

    return dp[n]
